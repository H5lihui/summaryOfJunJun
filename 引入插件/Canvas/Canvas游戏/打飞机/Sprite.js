/*	精灵对象构造方法	*///精灵对象成员属性var Sprite=function(name,painter,behaviors){	//精灵名称	if(name!==undefined){		this.name=name;	}	//精灵绘制器	if(painter!==undefined){		this.painter=painter;	}		this.top=0;//精灵位置x	this.left=0;//精灵位置y	this.width=0;//精灵宽度	this.height=0;//精灵高度	this.moveX=0;//精灵横向移动速度	this.moveY=0;//精灵纵向移动速度	this.visible=true;//当前精灵是否可见	this.animating=false;//当前精灵是否处于动画中	this.behaviors=behaviors||[];//精灵行为对象数组		return this;}//精灵对象成员方法Sprite.prototype={	//使用绘制器的绘制方法绘制精灵对象	paint:function(context){		//检测是否存在当前精灵绘制器且当前精灵可见		//alert(this.painter);		if(this.painter!==undefined && this.visible){						//调用精灵绘制器的绘制方法			this.painter.paint(this,context);		}	},	//更新当前精灵的行为	update:function(context,time){		for(var i=0;i<this.behaviors.length;i++){			this.behaviors[i].execute(this,context,time);		}			}}//描边和填充绘制器一般直接声明对象使用//图像绘制器（需要实例化,用于绘制简单的不需要变换的图片）var ImagePainter=function(url){	this.img=new Image();	this.img.src=url;	}ImagePainter.prototype={	paint:function(sprite,context){		if(this.img.complete){			context.drawImage(this.img,sprite.left,sprite.top,sprite.width,sprite.height);		}	}	}//精灵绘制器（需要实例化，用于绘制变化动作的图片,精灵绘制器本身可以代替图像绘制器）var SpritePainter=function(url,cells){	this.img=new Image();	this.img.src=url;	this.cells=cells||[];	this.cellIndex=0;}SpritePainter.prototype={	//更换不同图片的方法	advance:function(){		if(this.cellIndex==this.cells.length-1){			this.cellIndex=0;		}else{			this.cellIndex++;		}	},		paint:function(sprite,context){			if(this.img.complete){			var cell=this.cells[this.cellIndex];//当前切换到的图片			context.drawImage(this.img,cell.x,cell.y,cell.w,cell.h,sprite.left,sprite.top,cell.w,cell.h);		}			}}